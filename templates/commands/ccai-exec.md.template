---
description: {{DESCRIPTION}}
---

{{PROVIDER_INFO}}

## Quick Execution Guide

**You are a sophisticated AI agent** with access to powerful tools. Use your intelligence to:

1. **Analyze the task requirements** and determine the optimal approach
2. **Select the best execution method** based on task characteristics
3. **Execute efficiently** and handle any errors gracefully
4. **Verify results** intelligently and provide meaningful feedback

## Execution Methods

### Method 1: Standard Execution
```bash
RESULT=$(npx ccai run --provider {{PROVIDER}} --prompt-file /tmp/ccai-task-{{PROVIDER}}.md)
```

### Method 2: Enhanced Execution (Recommended for specialized tasks)
```bash
# Choose based on task characteristics:
# Web scraping: --example web-scraping
# Code generation: --example code-generation
# Data processing: --example data-processing
# Code analysis: --example code-analysis
# Documentation: --example documentation-research
# Visual inspection: --example visual-inspection

RESULT=$(npx ccai run --provider {{PROVIDER}} --example [task-type] --prompt-file /tmp/ccai-task-{{PROVIDER}}.md)
```

### Method 3: Session Continuation (for complex/multi-step tasks)
```bash
RESULT=$(npx ccai run --provider {{PROVIDER}} --session-id [existing-session-id] --prompt-file /tmp/ccai-task-{{PROVIDER}}.md)
```

## Error Handling & Recovery

### Parse Results
```bash
# Quick status check
IS_ERROR=$(echo "$RESULT" | jq -r '.is_error // false')
SUBTYPE=$(echo "$RESULT" | jq -r '.subtype // "unknown"')
SESSION_ID=$(echo "$RESULT" | jq -r '.session_id // "N/A"')
RESULT_TEXT=$(echo "$RESULT" | jq -r '.result // ""')

# Optional: Save detailed log
LOG_FILE=~/.claude/ccai/log/{{PROVIDER}}-$(date +%Y-%m-%d_%H-%M-%S).md
cat > "$LOG_FILE" <<EOF
# {{PROVIDER}} Execution - $(date)
Session: $SESSION_ID
Status: $SUBTYPE
Output: $RESULT_TEXT
Full: $RESULT
EOF
```

### Error Recovery Strategies

**Permission Issues:**
```bash
# Continue with same session
npx ccai run --provider {{PROVIDER}} --session-id "$SESSION_ID" --prompt-file /tmp/ccai-task-{{PROVIDER}}.md
```

**Tool/Parameter Errors:**
```bash
# Fix and retry with context
npx ccai run --provider {{PROVIDER}} --session-id "$SESSION_ID" "
Previous error: $RESULT_TEXT

Please fix by: [intelligent fix based on error analysis]
Continue the task: [remaining requirements]
"
```

**Complex Task Decomposition:**
Break down into smaller, manageable steps and execute sequentially.

## Verification & Quality Control

### Automated Checks
- **Content Verification**: Check file existence, content quality, completeness
- **Format Validation**: Ensure output meets expected format standards
- **Error Detection**: Identify and flag potential issues

### Smart Validation Patterns
- **For code files**: Check syntax, imports, basic functionality
- **For data**: Verify structure, completeness, accuracy
- **For documentation**: Ensure clarity, completeness, relevance
- **For analysis**: Validate insights, recommendations, actionability

## Best Practices

1. **Pre-execution Analysis**: Choose the most appropriate method
2. **Session Management**: Use `--session-id` for multi-step tasks
3. **Error Intelligence**: Analyze errors, provide specific fixes
4. **Quality Assurance**: Implement smart verification tailored to output type
5. **User Communication**: Provide clear, actionable feedback

## Available Task Types

{{EXAMPLES_LIST}}

## Execute Task

**Task Description($ARGUMENTS)**
$ARGUMENTS

---

**Execution Command:**
```bash
# Choose and execute the appropriate method above
```